MFS Tools version 0.8
by Steven Lang (Tiger on www.avsforum.com)

This is the initial release of the MFS Tools.  Currently, MFS Tools is a
backup and a restore program.  (Well, actually it is the same program,
busybox style, so it fits on boot disks better)  There are several options
so be sure to read the full documentation before proceeding.  (If you are
really impatient, the defaults work most the time)

To setup the command, either create link (Symbolic or hard) to the main
binary (mfstool) named after one of the tools.  (Currently backup or restore)
If the binary name is not a recognized utility, the first argument is assumed
to be the name of the utility, and the second argument forward the parameters.



BACKUP AND RESTORE QUICKSTART

For the impatient, this should be enough to get you a usable backup, and be
able to restore it.  Start by taking the drive out of your TiVo and connecting
it to your computer as the secondary master.  Connect your DOS drive as the
primary master.  If the TiVo drive is a locked drive, follow the procedures
to unlock it as outlined in the hack FAQ.  Boot to DOS (Or whatever OS you
normally used)  Put the "mfstool" file on a floppy disk.  Reboot to Linux,
either through a normal Linux boot or a TiVo upgrade disk.  Mount the
floppy with the command:

mkdir /mnt
mkdir /mnt/floppy
mount /dev/fd0 /mnt/floppy

Next, mount your DOS drive, which is the first partition on the primary master,
with the command:

mkdir /mnt/dos
mount /dev/hda1 /mnt/dos

Now you are ready to backup.  To backup, issue the command:

/mnt/floppy/mfstool backup -o /mnt/dos/tivo.bak /dev/hdc

Go for a quick snack, and when you get back, you should be done, unless any
errors were reported.

To restore, follow the procedures above.  Instead of putting the TiVo drive
as secondary master, put the drive you are going to restore to as secondary
master.  Again mount with the above commands.  Then start the restore with:

/mnt/floppy/mfstool restore -i /mnt/dos/tivo.bak /dev/hdc

Now read the rest of this document so you know what you are doing.



ALL UTILS

There are a few things common to all utilities.  When accessing MFS, the
drives used are /dev/hda and /dev/hdb if defaults are available.  This can
be overridden one of two ways.  Some utilities explicitly take an argument for
what the A and B drives are.  Others, this can be changed by setting the
environment variables MFS_HDA or MFS_HDB to point to the device (Or file) of
the drive.  This can also be done for individual partitions.  This is useful
if TiVo has modified dev entries.  For example, if TiVo thinks the partition
is /dev/hdb2 but it is really /dev/hda12, you could set MFS_HDB2=/dev/hda12
and it will read the proper drive.  Be warned, however, that MFS_HDA1 will
match for MFS_HDA10 as well, with a 0 appended on the end of the name.

To set this variable in bash (Or most TiVo boot disks)
export MFS_HDA=/dev/hdc
(Replace the A and c with appropriate letters, of course)

To set this variable in csh/tcsh
setenv MFS_HDA /dev/hdc
(Again replace the A and c with the appropriate letters)

Unlike past MFS utilities released by others, the MFS Tools package does not
require a special kernel or boot parameters.  In fact, it is quicker without
byte-swapping.  The MFS Tools themself recognize both swapped bytes and
the TiVo partition format.



BACKUP

The backup is completely non-destructive to the source drive/drives.  The
drives themselves are opened read-only, so no bug should be able to write to
them.  Of course, I could always be wrong, so use at your own risk. :)

The simplest method to do a backup, assuming you have a drive with enough
space free mounted on /mnt and your TiVo drive the secondary master, is to
issue the command:

mfstool backup -o /mnt/TiVo.bak /dev/hdc

This will create an uncompressed backup as /mnt/TiVo.bak.  Most people will
probably want something more like:

mfstool backup -6 -o /mnt/TiVo.bak /dev/hdc

This will create a compressed backup (Compression level 6) as /mnt/TiVO.bak.
The general use is:

mfstool backup [options] /dev/hdX [/dev/hdY]

Options are any of the below options, /dev/hdX is the device file for the
TiVo "A" drive, and /dev/hdY is the device file for the TiVo "B" drive.

The full list of available options for backup are:

-o file
	This tells backup where to write the backup.  For most uses, this
	will need about 200 megs of free space.  If - is specified, the
	backup will be written to stdout.

-1 .. -9
	Create a compressed backup.  Any number between 1 and 9 may be used.
	Lower numbers will be faster, while higher numbers will produce
	smaller backups.  Generally the difference is only a few megs.  So if
	you are impatient, -1 should be fine.  A nice trade-off is -6, and
	is recommended for everyone not impatient or pinching every bit.
-v
	Do not include /var in the backup.  Normally /var is included, since
	it makes other TiVo utilities that put stuff in /var easier to use.
	However, the TiVo is quite capable of re-creating it itself.  How
	nice of it.  This option will save anywhere from 1 to 128 megs in the
	size of the backup, depending on the contents of /var.

-s
	This will shink the volume set in the backup to the smallest it
	can get, given the data being backed up.  This effectively divorces
	the backup, and can usually make the resulting image able to be
	restored on a drive as large as the A drive of the original.  (Or
	the A+B drive in the case of a dual drive 30hr)  This is useful for
	making backups of an upgraded system.  The resulting backup will
	most likely be effectively un-upgraded, but with everything else
	the same.  Any drives that have been added (This includes self
	upgrades and the second drive on UK TiVo and DirecTV with TiVo) will
	be removed, if no data on them is being backed up.
	* NOTE: USING THIS WITH SOME SOFTWARE VERSIONS (1.3 and earlier so far)
	  MAY RESULT IN ANY EXISTING SHOWS IN NOW SHOWING BEING UNABLE TO BE
	  PLAYED OR DELETED.  IF THIS HAPPENS, A FACTORY RESET, OR A SOFTWARE
	  UPGRADE IS REQUIRED TO CLEAR THESE SHOWS.

Expert options:
-f N
	When macking the backup, include ALL streams (Videos) whos fsid
	is below N.  Most TiVos only require certain recordings for background
	animations.  Since these are so large, they are not included in
	software updates.  As a result, they all have very low fsids.  On
	TiVos that I have seen, this is below 2000.  In fact, 2000 is the
	default for this option.

-l N
	Another way to find which streams need to be backed up is by size.
	This will cause any stream less than N megs in size to be backed up.
	A value of 32 or 64 should be big enough.  This overrides the -f
	option.

-t
	When using the -l option, normally the streams are considered based on
	how many USED bytes they have.  This will cause the compare to be done
	against the TOTAL size taken up on the disk, which can be potetially
	larger.  This is usually more useful, since as of 2.0, recordings can
	take up multiple files.  So the end might only be a few megs, but have
	more allocated.  It would, therefore, be backed up with -l, and could
	prevent -s from working.  Usage with -i is undefined.

-T
	Like -t, but in addition to using the total size for comparison, the
	total size is also used to back up the stream.  Normally only the
	used size is backed up.  This will result in a larger backup.  This
	implies -t, with the exception that it can be used with -i as
	expected.

-a
	Backup ALL streams.  This is useful if you have a few recordings you
	want saved with your backup for whatever reason.



RESTORE

The restore works much the same way as the backup.  Except instead of reading
the drive and writing to a file, it reads a file and writes to a device.  BE
SURE YOU GIVE THE RIGHT DEVICE!

Even if your backup was not a single drive, you will not necessarily need
two drives to restore to.  The restore function of mfstool will automatically
shuffle the partitions around for the best fit.  This often means all
partitions on the first drive.  The first 11 partitions on the A drive can
not be moved, however.  The data is also updated to reflect the new location,
so TiVo will be able to find the drive now and in all forseeable future
software versions without any extra help.

The simplest method of restore, assuming your backup is named TiVo.bak in
a filesystem mounted at /mnt, and the new drive is the secondary master, is:

mfstool restore /dev/hdc -i /mnt/TiVo.bak

This will restore the file /mnt/TiVo.bak onto the secondary Master.

Other options available:

-q
	Quiet operation mode.  The progress display will not be displayed.
	Given twice will cause only error messages to be displayed.

-i file
	Read backup from file.  If - is specified, backup will be read from
	stdin.

-v size
	Create the /var partition this size, in megabytes.  This is useful
	if you have a big drive, and want to create a little sand-box space
	in your /var to play around with.  Default 128.

-s size
	Create the swap partition this size, in megabytes.  This is useful
	if you are running a lot of programs on the TiVo, or have VERY large
	drives, and want to put in a little extra swap.  (fsfix REQUIRES this
	for drives totaling over 120 megs)  Default 64.  Values up to 511 are
	possible.

-z
	Zero out partitions not backed up.  This means the inactive bootstrap,
	kernel and root partitions, as well as the /var partition if it is
	not in use.  Swap is automatically re-created, and not zeroed out.
	This is a little slower (About half a minute) but safer.  It may
	become the default at some point.

Backup and restore do not need random access files.  Therefore, it is possible
to use this utility to copy a drive from one drive to another.  This would be
done by issuing a command similar to the following, assuming that the source
is the primary master, and the new drive is the secondary master:

mfstool backup -o - /dev/hda | mfstool restore -i - /dev/hdc

More useful would be the following, which copies all the files:

mfstool backup -vTai - /dev/hda | mfstool restore -o - /dev/hdc

This will copy /var as well as all streams, to the new drive.  Note that
compression is not needed for this, and will likely just slow it down, being
CPU bound.



FAQ

Q. Will I still need ZapTiVo/ZapStream/dd/gzip with this?

No, MFS Tools replaces the functionality of all other Linux based backup
utilities.

Q. Will this work with a dual drive TiVo, such as the 312, original UK TiVo,
60 hour standalone, or original DirecTV with TiVo recievers?

Absolutely.  In fact, with the right set of options, MFS Tools can restore
these systems to single drives, in such a way as a second drive can then
be added by "Blessing" it and adding it, as covered in the normal TiVo hack
FAQ.

Q. I have a drive with errors on it.  Both dd and Dolly fail to produce a good
backup image.

That was not a question.

Since MFS Tools does not read the entire drive, only the requred data, the
chance that the bad block on the data surface is in the needed data is much
lower, so you may yet be able to produce a good backup.

Q. Can I restore my backups made with MFS Tools using dd or Dolly?

No.  MFS Tools uses a special format that condenses the information needed
for the backup, so no unnecessary data, even easily compressible, is backed
up.  This results in small and FAST backups.

Q. Can I restore my backups made with dd or Dolly with MFS Tools?

No.  You can use dd or Dolly to restore those.  However, if you have a raw
drive image as a file (And you have large file support) MFS Tools can turn
your existing drive image into an MFS Tools backup.  Just give MFS Tools
the filename instead of a device.

Q. Is there a Windows version?

Not Yet.(TM)  A port should not be too hard, so I may work on one at some
point.  I will need help, not being too familiar with Windows API.
Specifically for accessing a hard disk as a raw device.  If you think you
can help, I would love to hear from you.

Q. I made a backup of my drive, then restored it to the same drive.  Now
I see extra free space that wasn't there before.  What is going on?

MFS Tools creates the partition sizes based on how much space TiVo says the
partition uses, not how much space the partition table says the partition
uses.  To simplify access, TiVo rounds off all partitions to even values of
a power of two.  Any space beyond that is wasted.  That is where the free
space came from.  The wasted space was merely collected.

Q. Why do you call it MFS Tools if all it does is backup and restore?

Because some day I may add more utilities.  Some trivial stuff like mls
(That runs on x86) and some less trivial stuff.

Q. Does this help TiVo, Inc. at all?

Not directly.  However it is my hope that it will result in less MORON(TM)
behavior in the user community by making backups more convenient for all users.
It is also my hope that it will reduce load on the servers of TiVo, Inc. by
allowing people to create a new backup with each software version they recieve,
instead of forcing them to restore their backup, upgrade, then re-create the
backup or re-upgrade, or forcing them to download the software again every
time they restore from a backup.

It is also my hope this will make the TiVo experience better for those who
own their own TiVo already, and turn them into better TiVangelists, producing
more sales for TiVo, Inc.

Q. Does this hurt TiVo, Inc. at all?

No worse than other programs already released in source form.

Q. Will you be releasing the source to MFS Tools?

No.

Q. Please?

No.

Q. pretty pleez o plzz?!!!  i will be ur best friend!!! !!!!

Don't make me turn this car around.

Q. You are a disgrace to the open source movement!

Sorry, ESR, I love open source and free software and all that. I think both
concepts have good ideas behind them. But I also respect TiVo's wish to keep
some things out of the public eye, as they have made clear to me in past
exchanges. (Besides, what source is out there is already quite a bit)  So no
source.

Q. Will data restored from these backups work for all future TiVo software
versions?

No garuntees.  It works for all past versions I have tested, and I see no
reason it will not work with future versions.  However, the drive image does
not exactly match what TiVo will produce.  It should be a close enough
approximation for any forseeable changes.  But I'm not (very) psychic, so
I won't predict the future.

Q. Is this software sanctioned by TiVo, Inc.?

No.  Wow, I feel negative after those last few questions.  TiVo, Inc. can not
condone any activity involving opening up hardware produced by TiVo, Inc. or
their partners.  The hardware is not designed to be consumer upgradable,
and has dangerous exposed electronics.  Furthermore, opening of the TiVo
Customer Device by anyone other than a qualified service agent will void the
warranty and any rights you as a consumer have to any repair services.

Q. Why does this FAQ seem kind of contrived?

Because it is.  Duh, I haven't released this yet when the FAQ was written.
I had barely even announced it.  So these questions were as frequently
asked me as any other questions.  So I just picked some that I thought
would be useful.



ACKNOWLEDGEMENTS

Most of this was written on my own, with some help from the other TiVo
underground, especially with encouragement in the beginning.  However,
compression was supplied through the use of the zlib compression library by
Jean-loup Gailly and Mark Adler, and is Copyrighted (C) 1995-1998 by
Jean-loup Gailly and Mark Adler.  For further documentation on zlib, see
/usr/share/doc/zlib* on most Linux distributions, or the official home-page at
http://www.cdrom.com/pub/infozip/zlib/.



LEGAL

MFS Tools are Copyrighted (C) 2000-2001 by Steven Lang, all rights reserved.

TiVo is a registered trademark of TiVo, Inc.

DirecTV is a registered trademark of DirecTV, Inc., a unit of Hughes Electronics Corp.

Some data included in backups is Copyright (C) TiVo, Inc., their partners, or
other broadcast stations.  Backups are for personal use only.  Please read
the software licensing agreement included in your TiVo manual to understand
the limits of your rights to use the TiVo copyrighted software and data.

MORON, MORON I, MORON II, MORON III and "Don't be a moron" are not registered
trademarks of Richard Bullwinkle.

All other trademarks, service marks, and logos are the property of their
respective owners.
